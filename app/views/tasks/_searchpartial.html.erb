<script src="//maps.google.com/maps/api/js?key=AIzaSyBpINYIUUsOedgn7LETJQHKSQSrmD49p6A&libraries=places"></script>
<script src="//cdn.rawgit.com/mahnunchik/markerclustererplus/master/dist/markerclusterer.min.js"></script>
<script src='//cdn.rawgit.com/printercu/google-maps-utility-library-v3-read-only/master/infobox/src/infobox_packed.js' type='text/javascript'></script>


<%= form_for(task, :html => {:class => 'row'}) do |f|  %>
  <div class="form-group col-md-12 searchpartialbox" style="margin-bottom: 1px;">
    <input type="text" class="form-control" name="task[zipcode]" id="zipcode" placeholder="enter your address/postcode to find services in your area "/>
    <input class='hidden' value='' name="task[address]" id="address">
    <p id="error-message"></p>
  </div>

  <div class="form-group col-md-12" style="float:right">
    <button class="btn btn-color upper no-radius searchbtn" type="button" id="commit" name="commit" value="step1" data-disable-with="Search">Search</button>
    <button style="width:120px" class="btn btn-color upper findservicesbtn no-radius hidden" type="submit" id="next" name="commit" value="step1">Next</button>
  </div>

<% end %>

<script  type='text/javascript'>
var handler = Gmaps.build('Google');
handler.buildMap({ internal: {id: 'map'} }, function(){
  // be aware chrome >= 50 requires https for geolocation to work
  if(navigator.geolocation)
    navigator.geolocation.getCurrentPosition(displayOnMap);
});

var geocoder = new google.maps.Geocoder();
var infowindow = new google.maps.InfoWindow;
document.getElementById('commit').addEventListener('click', function() {
  geocodePlaceId();
});

function displayOnMap(position){
  var marker = handler.addMarker({
    lat: position.coords.latitude,
    lng: position.coords.longitude
  });
  handler.map.centerOn(marker);
  handler.fitMapToBounds();
  handler.getMap().setZoom(16);
};

function geocodePlaceId() {
        var geocoder = new google.maps.Geocoder();
        var placeId = document.getElementById('zipcode').value;
        $("#next").prop('disabled', true);
        geocoder.geocode({ 'componentRestrictions':{ 'postalCode': placeId } }, function(results, status) {
          if (status === 'OK') {
            if (results[0]) {
                console.log(results[0].formatted_address);
                var marker = handler.addMarker({
          lat: results[0].geometry.location.lat(),
          lng: results[0].geometry.location.lng()
        });
      handler.map.centerOn(marker);
      handler.fitMapToBounds();
      handler.getMap().setZoom(16);
      $("#next").prop('disabled', false);
      $('#error-message').html('');
      $('#address').val(results[0].formatted_address);
      //alert($('#address').val());
      } else {
              //window.alert('No results found');
              $("#next").prop('disabled', true);
              $('#error-message').html(' <i class="fa fa-exclamation-triangle "></i> No results found. Please try again.');
              $('#address').val('');
            }
          } else {
            //window.alert('Geocoder failed due to: ' + status);
            $("#next").prop('disabled', true);
            $('#error-message').html(' <i class="fa fa-exclamation-triangle "></i> No results found. Please try again.');
            $('#address').val('');
          }
        });

}

</script>
<script>
var localityInput = document.getElementById('zipcode');
var localityOptions = {
  types: ['(regions)'],
  componentRestrictions: {country: 'uk'}
};
autocomplete = new google.maps.places.Autocomplete(localityInput, localityOptions);
  google.maps.event.addListener(autocomplete, 'place_changed', function() {
    var place = autocomplete.getPlace();
    for (var i = 0; i < place.address_components.length; i++) {
      for (var j = 0; j < place.address_components[i].types.length; j++) {
        if (place.address_components[i].types[j] == "postal_code") {
          document.getElementById('zipcode').innerHTML = place.address_components[i].long_name;

        }
      }
    }
  })
google.maps.event.addDomListener(window, "load", initialize);
</script>
<style>
#error-message{color: red;}
</style>
